Description: "(SO8010) CDK for GCR solution: recommender system"
Parameters:
  KeyPairParam:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Key Pair to access EC2
  SsmParameterValueForImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
Resources:
  gcrRsDevWorkshopEc2VPCBD571574:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC/Resource
  gcrRsDevWorkshopEc2VPCgcrRsDevWorkshopEc2PublicSubnetSubnet1Subnet2EB57CCD:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId:
        Ref: gcrRsDevWorkshopEc2VPCBD571574
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: gcrRsDevWorkshopEc2PublicSubnet
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC/gcrRsDevWorkshopEc2PublicSubnetSubnet1
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC/gcrRsDevWorkshopEc2PublicSubnetSubnet1/Subnet
  gcrRsDevWorkshopEc2VPCgcrRsDevWorkshopEc2PublicSubnetSubnet1RouteTable0B68CC76:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: gcrRsDevWorkshopEc2VPCBD571574
      Tags:
        - Key: Name
          Value: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC/gcrRsDevWorkshopEc2PublicSubnetSubnet1
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC/gcrRsDevWorkshopEc2PublicSubnetSubnet1/RouteTable
  gcrRsDevWorkshopEc2VPCgcrRsDevWorkshopEc2PublicSubnetSubnet1RouteTableAssociation96C1AE35:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: gcrRsDevWorkshopEc2VPCgcrRsDevWorkshopEc2PublicSubnetSubnet1RouteTable0B68CC76
      SubnetId:
        Ref: gcrRsDevWorkshopEc2VPCgcrRsDevWorkshopEc2PublicSubnetSubnet1Subnet2EB57CCD
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC/gcrRsDevWorkshopEc2PublicSubnetSubnet1/RouteTableAssociation
  gcrRsDevWorkshopEc2VPCgcrRsDevWorkshopEc2PublicSubnetSubnet1DefaultRoute6CB28F39:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: gcrRsDevWorkshopEc2VPCgcrRsDevWorkshopEc2PublicSubnetSubnet1RouteTable0B68CC76
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: gcrRsDevWorkshopEc2VPCIGW3FF7EB53
    DependsOn:
      - gcrRsDevWorkshopEc2VPCVPCGW7177637A
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC/gcrRsDevWorkshopEc2PublicSubnetSubnet1/DefaultRoute
  gcrRsDevWorkshopEc2VPCgcrRsDevWorkshopEc2PublicSubnetSubnet2Subnet99271D12:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: gcrRsDevWorkshopEc2VPCBD571574
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: gcrRsDevWorkshopEc2PublicSubnet
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC/gcrRsDevWorkshopEc2PublicSubnetSubnet2
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC/gcrRsDevWorkshopEc2PublicSubnetSubnet2/Subnet
  gcrRsDevWorkshopEc2VPCgcrRsDevWorkshopEc2PublicSubnetSubnet2RouteTableD730EBB7:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: gcrRsDevWorkshopEc2VPCBD571574
      Tags:
        - Key: Name
          Value: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC/gcrRsDevWorkshopEc2PublicSubnetSubnet2
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC/gcrRsDevWorkshopEc2PublicSubnetSubnet2/RouteTable
  gcrRsDevWorkshopEc2VPCgcrRsDevWorkshopEc2PublicSubnetSubnet2RouteTableAssociationD864E8E9:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: gcrRsDevWorkshopEc2VPCgcrRsDevWorkshopEc2PublicSubnetSubnet2RouteTableD730EBB7
      SubnetId:
        Ref: gcrRsDevWorkshopEc2VPCgcrRsDevWorkshopEc2PublicSubnetSubnet2Subnet99271D12
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC/gcrRsDevWorkshopEc2PublicSubnetSubnet2/RouteTableAssociation
  gcrRsDevWorkshopEc2VPCgcrRsDevWorkshopEc2PublicSubnetSubnet2DefaultRouteA4121408:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: gcrRsDevWorkshopEc2VPCgcrRsDevWorkshopEc2PublicSubnetSubnet2RouteTableD730EBB7
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: gcrRsDevWorkshopEc2VPCIGW3FF7EB53
    DependsOn:
      - gcrRsDevWorkshopEc2VPCVPCGW7177637A
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC/gcrRsDevWorkshopEc2PublicSubnetSubnet2/DefaultRoute
  gcrRsDevWorkshopEc2VPCIGW3FF7EB53:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC/IGW
  gcrRsDevWorkshopEc2VPCVPCGW7177637A:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: gcrRsDevWorkshopEc2VPCBD571574
      InternetGatewayId:
        Ref: gcrRsDevWorkshopEc2VPCIGW3FF7EB53
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2VPC/VPCGW
  gcrRsDevWorkshopEc2Ec2SecurityGroup46B7611C:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow (TCP port 22, 80) in
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow Port 80 Access
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          Description: Allow Port 22 (SSH) Access
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      VpcId:
        Ref: gcrRsDevWorkshopEc2VPCBD571574
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2Ec2SecurityGroup/Resource
  gcrRsDevWorkshopEc2Ec2Role5FA2A265:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/PowerUserAccess
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2Ec2Role/Resource
  gcrRsDevWorkshopEc2Ec2RoleDefaultPolicy09DC9B37:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: iam:*
            Effect: Allow
            Resource: "*"
          - Action: codecommit:GitPull
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - gcrRsDevWorkshopEc2RepositoryDB48BA65
                - Arn
          - Action: codecommit:GitPush
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - gcrRsDevWorkshopEc2RepositoryDB48BA65
                - Arn
        Version: "2012-10-17"
      PolicyName: gcrRsDevWorkshopEc2Ec2RoleDefaultPolicy09DC9B37
      Roles:
        - Ref: gcrRsDevWorkshopEc2Ec2Role5FA2A265
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2Ec2Role/DefaultPolicy/Resource
  gcrRsDevWorkshopEc2RepositoryDB48BA65:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: recommender-system-dev-workshop-code
      RepositoryDescription: CodeCommit Repository
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2Repository/Resource
  gcrRsDevWorkshopEc2Ec2InstanceInstanceProfileDA785039:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: gcrRsDevWorkshopEc2Ec2Role5FA2A265
    DependsOn:
      - gcrRsDevWorkshopEc2RepositoryDB48BA65
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2Ec2Instance/InstanceProfile
  gcrRsDevWorkshopEc2Ec2Instance916D1980:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: true
            VolumeSize: 100
      IamInstanceProfile:
        Ref: gcrRsDevWorkshopEc2Ec2InstanceInstanceProfileDA785039
      ImageId:
        Ref: SsmParameterValueForImageId
      InstanceType: t2.xlarge
      KeyName:
        Ref: KeyPairParam
      SecurityGroupIds:
        - Fn::GetAtt:
            - gcrRsDevWorkshopEc2Ec2SecurityGroup46B7611C
            - GroupId
      SubnetId:
        Ref: gcrRsDevWorkshopEc2VPCgcrRsDevWorkshopEc2PublicSubnetSubnet1Subnet2EB57CCD
      Tags:
        - Key: Name
          Value: RsRawEC2CdkStack/gcrRsDevWorkshopEc2Ec2Instance
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - |-
                #!/bin/bash
                function exitTrap(){
                exitCode=$?
                /opt/aws/bin/cfn-signal --stack RsRawEC2CdkStack --resource gcrRsDevWorkshopEc2Ec2Instance916D1980 --region 
              - Ref: AWS::Region
              - |2
                 -e $exitCode || echo 'Failed to send Cloudformation Signal'
                }
                trap exitTrap EXIT
                set -e

                exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
                echo "Start time: $(date '-u')"

                sudo su
                yum update -y

                # docker
                amazon-linux-extras install docker -y
                service docker start
                usermod -a -G docker ec2-user

                # software
                yum install git -y
                yum install jq -y


                AWS_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r '.region')
                ACCOUNT_ID=$(aws sts get-caller-identity --output text --query Account)

                # code
                echo "==== setup code ======"
                export HOME=/home/ec2-user

                #https://git-codecommit.ap-northeast-1.amazonaws.com/v1/repos/gcrRsDevWorkshopRepo

                url_suffix='com'
                if [[ AWS_REGION =~ ^cn.* ]];then
                    url_suffix='com.cn'
                fi 
                repo_name="https://git-codecommit.$AWS_REGION.amazonaws.${url_suffix}/v1/repos/recommender-system-dev-workshop-code"
                echo $repo_name

                echo "run git config --global"
                git config --global user.name "rs-dev-workshop"
                git config --global user.email "rs-dev-workshop@example.com"
                git config --global credential.helper '!aws codecommit credential-helper $@'
                git config --global credential.UseHttpPath true
                echo "git config --global --list"
                git config --global --list
                echo ""


                echo "==== config AWS ENV ======"
                # config AWS ENV
                sudo -u ec2-user -i <<EOS
                echo "set default.region"
                aws configure set default.region ${AWS_REGION}
                aws configure get default.region
                echo "export ACCOUNT_ID=${ACCOUNT_ID}" | tee -a /home/ec2-user/.bash_profile
                echo "export AWS_REGION=${AWS_REGION}" | tee -a /home/ec2-user/.bash_profile
                echo "export REGION=${AWS_REGION}" | tee -a /home/ec2-user/.bash_profile

                mkdir /home/ec2-user/environment
                cd /home/ec2-user/environment
                wget https://github.com/gcr-solutions/recommender-system-dev-workshop-code/archive/refs/heads/main.zip
                unzip main.zip

                echo "git clone ${repo_name}"
                git clone ${repo_name}

                mv ./recommender-system-dev-workshop-code-main/* ./recommender-system-dev-workshop-code/

                rm -rf recommender-system-dev-workshop-code-main
                cd ./recommender-system-dev-workshop-code/
                git add . && git commit -m 'first commit' && git push

                EOS

                # httpd
                yum install -y httpd
                systemctl start httpd
                systemctl enable httpd

                echo "<h1>Hello World from AWS EC2 $(hostname -f)</h1><br><hr><h2>Start Time: $(date -'u' )</h2>" > /var/www/html/index.html

                echo "End time: $(date '-u')"
                exit 0
    DependsOn:
      - gcrRsDevWorkshopEc2Ec2RoleDefaultPolicy09DC9B37
      - gcrRsDevWorkshopEc2Ec2Role5FA2A265
      - gcrRsDevWorkshopEc2RepositoryDB48BA65
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/gcrRsDevWorkshopEc2Ec2Instance/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAAE1VQwW7CMAz9lt1DoBw27TbUA+JE1U7cU9dogTauEmeoivrvS1qg7ORn+/nZfpkMWfYpN29f6uZW0FzXQBZlqFjBVeRnUyirOmS0KTl67j2LnIxj64FTrURH3gImHBuNZk1mFNl286oaEggIWxlOPSTuqchF4etWQ+Vrg5PWgkryjN+qbnGpL7WdcwRapU1PcgIHEw+NzL1ivKnhvuae7Tj+9NOhYVEheKt52Fvy/bTgX+EQ31MG7pIzHoVWnQwlzRdNsaB4/bRlQQ9+Yems2zgG1CBQ12mO09iT00x2mJ17ZGOiJdtfzXw6P8a2iSry4ta/2bv8iMZenNYr6w3rDmU5xz+zIEEyzAEAAA==
    Metadata:
      aws:cdk:path: RsRawEC2CdkStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  SSHCommand:
    Value:
      Fn::Join:
        - ""
        - - "ssh -i "
          - Ref: KeyPairParam
          - .pem -o IdentitiesOnly=yes ec2-user@
          - Fn::GetAtt:
              - gcrRsDevWorkshopEc2Ec2Instance916D1980
              - PublicIp
  EC2IP:
    Value:
      Fn::GetAtt:
        - gcrRsDevWorkshopEc2Ec2Instance916D1980
        - PublicIp
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

