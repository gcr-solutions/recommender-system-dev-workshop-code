AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  (SO8010)

  CloudFormation for RecSys StepFuncs


Parameters:
  NamePrefix:
    Type: String
    Default: rs-movie-ps-complete-dev

  Stage:
    Type: String
    Default: dev

  StepFuncAndLambdaRoleName:
    Type: String
    Default: LambdaAndStepFuncsRole

  SagemakerRoleName:
    Type: String
    Default: SMRole

  S3UtilLabmda:
    Type: String
    Default: S3UtilLabmda

  PreCheckLabmda:
    Type: String
    Default: PreCheckLabmda

  SNSMessageLambda:
    Type: String
    Default: SNSMessageLambda

#  ECRPrefix:
#    Type: String
#    Default: 522244679887.dkr.ecr.ap-northeast-1.amazonaws.com

Resources:
  SMProcessingStepFunc:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/rs-${Stage}-${StepFuncAndLambdaRoleName}-${AWS::Region}"
      StateMachineName: !Sub ${NamePrefix}-SMProcessingStepFunc
      DefinitionString: !Sub |
        {
          "StartAt": "Run processing",
          "States": {
            "Run processing": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::sagemaker:createProcessingJob.sync",
              "Parameters": {
                "AppSpecification": {
                  "ImageUri.$": "States.Format('${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/{}:${Stage}', $.ImageName)",
                  "ContainerArguments.$": "$.ContainerArguments"
                },
                "ProcessingResources": {
                  "ClusterConfig": {
                    "InstanceCount.$": "$.InstanceCount",
                    "InstanceType.$": "$.InstanceType",
                    "VolumeSizeInGB": 200
                  }
                },
                "RoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/service-role/rs-${Stage}-${SagemakerRoleName}-${AWS::Region}",
                "ProcessingJobName.$": "States.Format('{}', $$.Execution.Name)"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "ThrottlingException",
                    "SageMaker.AmazonSageMakerException"
                  ],
                  "IntervalSeconds": 4,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "ResultSelector": {
                "ProcessingJobName.$": "$.ProcessingJobName",
                "ProcessingJobStatus.$": "$.ProcessingJobStatus"
              },
              "ResultPath": "$.RunProcessing",
              "End": true
            }
          }
        }


  ActionPreprocessingStepFunc:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/rs-${Stage}-${StepFuncAndLambdaRoleName}-${AWS::Region}"
      StateMachineName: !Sub ${NamePrefix}-ActionPreprocessingStepFunc
      DefinitionString: !Sub |
        {
          "StartAt": "Pre check",
          "States": {
            "Pre check": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "rs-${Stage}-${PreCheckLabmda}",
                "Payload": {
                  "bucket.$": "$.Bucket",
                  "prefix.$": "$.S3Prefix",
                  "file_list": [
                    "system/ingest-data/action/"
                  ]
                }
              },
              "ResultSelector": {
                "Payload.$": "$.Payload"
              },
              "ResultPath": "$.Precheck",
              "Next": "Run processing"
            },
            "Run processing": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ImageName": "rs/movie-action-preprocessing",
                  "ContainerArguments.$": "States.Array('--bucket', $.Bucket, '--prefix', $.S3Prefix, '--region', '${AWS::Region}', '--method', 'ps-complete')",
                  "InstanceType": "ml.m5.4xlarge",
                  "InstanceCount": 2
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('Nactionpre{}', $.Precheck.Payload.UID)"
              },
              "End": true
            }
          }
        }


  UserPreprocessingStepFunc:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/rs-${Stage}-${StepFuncAndLambdaRoleName}-${AWS::Region}"
      StateMachineName: !Sub ${NamePrefix}-UserPreprocessingStepFunc
      DefinitionString: !Sub |
        {
          "StartAt": "Pre check",
          "States": {
            "Pre check": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "rs-${Stage}-${PreCheckLabmda}",
                "Payload": {
                  "bucket.$": "$.Bucket",
                  "prefix.$": "$.S3Prefix",
                  "file_list": [
                    "system/ingest-data/user/"
                  ]
                }
              },
              "ResultSelector": {
                "Payload.$": "$.Payload"
              },
              "ResultPath": "$.Precheck",
              "Next": "Run processing"
            },
            "Run processing": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ImageName": "rs/movie-user-preprocessing",
                  "ContainerArguments.$": "States.Array('--bucket', $.Bucket, '--prefix', $.S3Prefix, '--region', '${AWS::Region}', '--method', 'ps-complete')",
                  "InstanceType": "ml.m5.4xlarge",
                  "InstanceCount": 1
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('Nactionpre{}', $.Precheck.Payload.UID)"
              },
              "End": true
            }
          }
        }

  ItemPreprocessingStepFunc:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/rs-${Stage}-${StepFuncAndLambdaRoleName}-${AWS::Region}"
      StateMachineName: !Sub ${NamePrefix}-ItemPreprocessingStepFunc
      DefinitionString: !Sub |
        {
          "StartAt": "Pre check",
          "States": {
            "Pre check": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "rs-${Stage}-${PreCheckLabmda}",
                "Payload": {
                  "bucket.$": "$.Bucket",
                  "prefix.$": "$.S3Prefix",
                  "file_list": [
                   "system/ingest-data/item/"
                  ]
                }
              },
              "ResultSelector": {
                "Payload.$": "$.Payload"
              },
              "ResultPath": "$.Precheck",
              "Next": "Run processing"
            },
            "Run processing": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ImageName": "rs/movie-item-preprocessing",
                  "ContainerArguments.$": "States.Array('--bucket', $.Bucket, '--prefix', $.S3Prefix, '--region', '${AWS::Region}', '--method', 'ps-complete')",
                  "InstanceType": "ml.m5.4xlarge",
                  "InstanceCount": 1
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('Nitempre{}', $.Precheck.Payload.UID)"
              },
              "End": true
            }
          }
        }

  BatchPreprocessingStepFunc:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/rs-${Stage}-${StepFuncAndLambdaRoleName}-${AWS::Region}"
      StateMachineName: !Sub ${NamePrefix}-BatchPreprocessingStepFunc
      DefinitionString: !Sub |
        {
          "StartAt": "Pre check",
          "States": {
            "Pre check": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "rs-${Stage}-${PreCheckLabmda}",
                "Payload": {
                  "bucket.$": "$.Bucket",
                  "prefix.$": "$.S3Prefix",
                  "file_list": [
                   "system/ingest-data/user/"
                  ]
                }
              },
              "ResultSelector": {
                "Payload.$": "$.Payload"
              },
              "ResultPath": "$.Precheck",
              "Next": "Run processing"
            },
            "Run processing": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "ImageName": "rs/movie-batch-preprocessing",
                  "ContainerArguments.$": "States.Array('--bucket', $.Bucket, '--prefix', $.S3Prefix, '--region', '${AWS::Region}', '--method', 'ps-complete')",
                  "InstanceType": "ml.m5.4xlarge",
                  "InstanceCount": 1
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${NamePrefix}-SMProcessingStepFunc",
                "Name.$": "States.Format('Nitempre{}', $.Precheck.Payload.UID)"
              },
              "End": true
            }
          }
        }


  ######################################
  #######################################

  NotificationStepFunc:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/rs-${Stage}-${StepFuncAndLambdaRoleName}-${AWS::Region}"
      StateMachineName: !Sub ${NamePrefix}-NotificationStepFunc
      DefinitionString: !Sub |
        {
            "StartAt": "Send notification",
            "States": {
                "Send notification": {
                    "Type": "Task",
                    "Resource": "arn:${AWS::Partition}:states:::lambda:invoke",
                    "Parameters": {
                        "FunctionName": "rs-${Stage}-${SNSMessageLambda}",
                        "Payload": {
                            "file_type.$": "$.file_type",
                            "message_type": "movie",
                            "Bucket.$": "$.Bucket",
                            "S3Prefix.$": "$.S3Prefix"
                        }
                    },
                "End": true
                }
            }
        }

